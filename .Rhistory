getwd()
setwd("C:\\DAOM\\DWCA")
getwd()
setwd("C://DAOM//DWCA")
getwd()
setwd("C:\DAOM\DWCA")
setwd("C:\\DAOM\\DWCA")
getwd()
?setwd()
daom <- read.csv("DAOMDATA.TXT")
View(daom)
library(data.table)
library(dplyr)
dim(daom)
daom <- read.csv("DAOMDATA.TXT","\t")
daom <- read.csv("DAOMDATA.TXT",sep = "\t")
dim(daom)
daom <- subset(daom, barcode != "")
names(daom)
daom <- subset(daom, Barcode != "")
names(daom)
dim(daom)
View(daom)
dt <- read.table("DAOMDATA.TXT",sep = "\t")
names(daom)<-sub("Barcode","occurrenceID",names(daom))
names(daom)
names(daom)<-sub("DAOM","catalogueNumber",names(daom))
names(daom)<-sub("catalogueNumber","catalogNumber",names(daom))
names(daom)<-sub("NOTES","occurrenceRemarks",names(daom))
names(daom)<-sub("COLLECTOR","recordedBy",names(daom))
library(stringr)
daom$associatedTaxa <- str_c(daom$H_GENUS,' ',daom$H_SPEC)
names(daom)
daom <- daom %>% unite("associatedTaxa", H_GENUS:H_SPEC, sep= " ")
library(tidyr)
library(tidyverse)
install.packages(""tidyr"")
install.packages("tidy")
install.packages("tidyr")
library(tidyverse)
library(tidyr)
daom <- daom %>% unite("associatedTaxa", H_GENUS:H_SPEC, sep= " ")
names(daom)
daom <- daom %>% unite("habitat", H_ETC:HABITAT, sep= ", ")
names(daom)
class(daom)
daom <- subset(daom, select = -c(gr))
daom <- subset(daom, select = -c(GROUP))
names(daom)
names(daom)<-sub("stateProvince","PROVINCE",names(daom))
View(daom)
View(daom)
write.table(daom, "newDarwin.txt")
dim(daom)
names(daom)
daom <- subset(daom, select = -c(OTHER_NO))
names(daom)
names(daom)<-sub("eventDate","DATE",names(daom))
names(daom)
names(daom)<-sub("verbatimEventDate","VerbatimDate",names(daom))
names(daom)
names(daom)<-sub("county","COUNTY_TWP",names(daom))
names(daom)
daom <- subset(daom, select = -c(HostFamily))
names(daom)
library(stringr)
library(tidyr)
setwd("C:\\DAOM\\DWCA")
daom <- read.csv("DAOMDATA.TXT","\t")
# remove 11k records with no barcode
daom <- subset(daom, Barcode != "")
# rename columns
names(daom)<-sub("Barcode","occurrenceID",names(daom))
names(daom)<-sub("DAOM","catalogNumber",names(daom))
daom <- read.csv("DAOMDATA.TXT",sep = "\t")
# rename columns
names(daom)<-sub("Barcode","occurrenceID",names(daom))
names(daom)<-sub("DAOM","catalogNumber",names(daom))
names(daom)<-sub("NOTES","occurrenceRemarks",names(daom))
names(daom)<-sub("COLLECTOR","recordedBy",names(daom))
names(daom)<-sub("eventDate","DATE",names(daom))
names(daom)<-sub("verbatimEventDate","VerbatimDate",names(daom))
names(daom)<-sub("country","COUNTRY",names(daom))
names(daom)<-sub("county","COUNTY_TWP",names(daom))
names(daom)<-sub("stateProvince","PROVINCE",names(daom))
names(daom)<-sub("verbatimLocality","CITY_ETC", names(daom))
names(daom)<-sub("verbatimElevation","ALTITUDE",names(daom))
names(daom)<-sub("verbatimLatitude","LATITUDE",names(daom))
names(daom)<-sub("verbatimLongitude","LONGITUDE",names(daom))
names(daom)<-sub("identifiedBy","DET", names(daom))
names(daom)<-sub("originalNameUsage","INIT_NAME", names(daom))
names(daom)<-sub("specificEpithet","SPECIES",names(daom))
names(daom)<-sub("infraspecificEpithet","VARIETY",names(daom))
names(daom)<-sub("typeStatus","TYPE_SPEC",names(daom))
names(daom)<-sub("scientificNameAuthorship","AUTHORS",names(daom))
# combine columns to new ones
daom <- daom %>% unite("associatedTaxa", H_GENUS:H_SPEC, sep= " ")
daom <- daom %>% unite("habitat", H_ETC:HABITAT, sep= " ")
# remove columns
daom <- subset(daom, select = -c(OTHER_NO))
daom <- subset(daom, select = -c(HostFamily))
View(daom)
names(daom)
daom <- subset(daom, select = -c(group_by()))
daom <- subset(daom, select = -c(GROUP)
)
names(daom)
daom <- read.csv("DAOMDATA.TXT",sep = "\t")
# remove 11k records with no barcode
daom <- subset(daom, Barcode != "")
# rename columns
names(daom)<-sub("Barcode","occurrenceID",names(daom))
names(daom)<-sub("DAOM","catalogNumber",names(daom))
names(daom)<-sub("NOTES","occurrenceRemarks",names(daom))
names(daom)<-sub("COLLECTOR","recordedBy",names(daom))
names(daom)<-sub("eventDate","DATE",names(daom))
names(daom)<-sub("verbatimEventDate","VerbatimDate",names(daom))
names(daom)<-sub("country","COUNTRY",names(daom))
names(daom)<-sub("county","COUNTY_TWP",names(daom))
names(daom)<-sub("stateProvince","PROVINCE",names(daom))
names(daom)<-sub("verbatimLocality","CITY_ETC", names(daom))
names(daom)<-sub("verbatimElevation","ALTITUDE",names(daom))
names(daom)<-sub("verbatimLatitude","LATITUDE",names(daom))
names(daom)<-sub("verbatimLongitude","LONGITUDE",names(daom))
names(daom)<-sub("identifiedBy","DET", names(daom))
names(daom)<-sub("originalNameUsage","INIT_NAME", names(daom))
names(daom)<-sub("specificEpithet","SPECIES",names(daom))
names(daom)<-sub("infraspecificEpithet","VARIETY",names(daom))
names(daom)<-sub("typeStatus","TYPE_SPEC",names(daom))
names(daom)<-sub("scientificNameAuthorship","AUTHORS",names(daom))
# combine columns to new ones
daom <- daom %>% unite("associatedTaxa", H_GENUS:H_SPEC, sep= " ")
daom <- daom %>% unite("habitat", H_ETC:HABITAT, sep= " ")
# remove columns
daom <- subset(daom, select = -c(OTHER_NO))
daom <- subset(daom, select = -c(GROUP))
View(daom)
names(daom)
View(daom)
names(daom)
names(daom)<-sub("PROVINCE","stateProvince",names(daom))
names(daom)
View(daom)
names(daom)
names(daom)<-sub("DET","identifiedBy", names(daom))
names(daom)
names(daom)<-sub("COUNTY_TWP","county",names(daom))
names(daom)
source("~/MycoPortal/Portal.R", echo=TRUE)
library(stringr)
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
daom <- read.csv("DAOMDATA.TXT",sep = "\t")
dim(daom)
# remove 11k records with no barcode
daom <- subset(daom, Barcode != "")
# rename columns
names(daom)<-sub("Barcode","occurrenceID",names(daom))
names(daom)<-sub("DAOM","catalogNumber",names(daom))
names(daom)<-sub("NOTES","occurrenceRemarks",names(daom))
names(daom)<-sub("COLLECTOR","recordedBy",names(daom))
names(daom)<-sub("DATE","eventDate",names(daom))
names(daom)<-sub("VerbatimDate","verbatimEventDate",names(daom))
names(daom)<-sub("COUNTRY","country",names(daom))
names(daom)<-sub("COUNTY_TWP","county",names(daom))
names(daom)<-sub("PROVINCE","stateProvince",names(daom))
names(daom)<-sub("CITY_ETC","verbatimLocality", names(daom))
names(daom)<-sub("ALTITUDE","verbatimElevation",names(daom))
names(daom)<-sub("LATITUDE","verbatimLatitude",names(daom))
names(daom)<-sub("LONGITUDE","verbatimLongitude",names(daom))
names(daom)<-sub("DET","identifiedBy", names(daom))
names(daom)<-sub("INIT_NAME", "originalNameUsage",names(daom))
names(daom)<-sub("SPECIES","specificEpithet",names(daom))
names(daom)<-sub("VARIETY","infraspecificEpithet",names(daom))
names(daom)<-sub("TYPE_SPEC","typeStatus",names(daom))
names(daom)<-sub("AUTHORS","scientificNameAuthorship",names(daom))
# combine columns to new ones
daom <- daom %>% unite("associatedTaxa", H_GENUS:H_SPEC, sep= " ")
daom <- daom %>% unite("habitat", H_ETC:HABITAT, sep= " ")
# remove columns
daom <- subset(daom, select = -c(OTHER_NO))
daom <- subset(daom, select = -c(GROUP))
View(daom)
names(daom)
write.table(daom, "newDarwin.txt")
dim(daom)
write.table(daom,"fullDarwinTab.txt",sep = "\t")
names(daom)
daom <- subset(daom, select = -c(HostFamily))
names(daom)
names(daom)<-sub("ANNOTATED",identificationRemarks,names(daom))
names(daom)<-sub("ANNOTATED","identificationRemarks",names(daom))
names(daom)
daom <- subset(daom, select = -c(STATE))
names(daom)
dim(names)
dim(daom)
write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t",fileEncoding = UTF-8)
write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t")
?write.table
write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t",rownames = FALSE,fileEncoding = "UTF-8")
write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
names(daom)
?write.table
write.table(daom,file =  "daom1.txt",na="",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
names(daom)
names(daom)<-sub("yearNUM","year",names(daom))
names(daom)<-sub("monthNUM","month",names(daom))
names(daom)<-sub("dayNUM","day",names(daom))
names(daom)
write.table(daom,file =  "daom1.txt",na="",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
event <- daom$eventDate
event
newEvent <- format(event, "%Y/%m/%d")
newEvent <- format(event, "%Y %m %d")
library(lubridate)
class(event)
event
newEvent <- format(event[3], "%Y %m %d")
test <- event[3]
test
newEvent <- format(test, "%Y %m %d")
event <- as.date(daom$eventDate)
event <- as.Date(daom$eventDate)
event <- as.Date(daom$eventDate[1:5])
event <- as.Date(daom$eventDate[1:3])
daom$eventDate[1:3]
daom$eventDate[2:3]
test <- daom$eventDate[2-3]
test <- as.Date(daom$eventDate[2-3])
test <- as.Date(daom$eventDate[2])
testagain <- subset(daom, year,month, day)
testagain <- subset(daom, "year","month", "day")
3col <- c(daom$year,"-",daom$month,"-",daom$day)
3col <- c(daom$year,daom$month,daom$day)
col <- c(daom$year,daom$month,daom$day)
col <- c(daom$year,"-",daom$month,"-",daom$day)
dim(col)
threecol <- c(daom$year,"-",daom$month,"-",daom$day)
threecol
dim(threecol)
class(threecol)
myDate <- as.Date("Jul 21, 1999")
daom$eventDate[2:3]
myDate<- "19 Jul 2016"
myDate<- as.Date("19 Jul 2016")
myDate<- as.Date("19 07 2016")
?as.Date
list(ls())
head(event)
testJen <- as.Date(event, format, tryFormats = c("%d %b %Y", "%Y/%m/%d"),
optional = FALSE)
daom <- daom %>% unite("eventDate",year:month:day,sep = "-",remove = FALSE,na.rm=TRUE)
daom$eventDate
write.table(daom,file = "daom1.txt",na = "",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
names(daom)
daom$eventDate[5]
test <- as.Date(daom$eventDate[5])
test
class(test)
daom$test <- daom$eventDate
names(daom)
daom$test
daom$test <- as.Date(daom$eventDate)
daom$test
test <- as.Date("2016-7")
test <- as.Date("2016-7-0")
test <- as.Date("2016-7-01")
test
as.Date("12 Jul 1967","%d %b %Y"")
)
as.Date("12 Jul 1967","%d %b %Y")
as.Date("Jul 1967","%b %Y")
as.Date("1967","%Y")
daom$eventDate
source("~/MycoPortal/Portal.R")
source("~/MycoPortal/Portal.R")
dim(daom)
daom$DATE
source("~/MycoPortal/Portal.R")
dim(daom)
daom$DATE
dim(daom)
head(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
names(daom)
daom$eventDate
daom$dayTXT
daom$monthTXT
source("~/MycoPortal/Portal.R")
daom$dayTXT
daom$monthTXT
daom$eventDate
daom$dateDate
dim(daom)
daom$Date
daom$DATE
source("~/MycoPortal/Portal.R")
daom$DATE
daom$Date
dim(daom)
daom$eventDate
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
names(daom)
# names(daom)
#write.table(daom, "newDarwin.txt",sep = "\t")
#write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t")
#write.table(daom,file =  "daom1.txt",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
write.table(daom,file = "daom.txt",na = "",quote = FALSE, sep = "\t",row.names = FALSE,fileEncoding = "UTF-8")
source("~/MycoPortal/Portal.R")
dim(daom)
names(daom)
source("~/MycoPortal/Portal.R")
dim(daom)
names(daom)
